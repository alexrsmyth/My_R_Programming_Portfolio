## The following work is from my course work in Google Data Analytics Certificate.
## Review a scenerio, focus on cleaning real data and performing basic calculations to gain insight.

## Scenerio: Working for a hotel booking site and asked to clean a .csv file containing data from two different tables from different hotels.

## install and load necessary packages needed to clean the data

install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)



## import data from external .csv file and save it as a data from called `bookings_df`

bookings_df <- read_csv("hotel_bookings.csv")



## Preview and explore the data.

head(bookings_df)

str(bookings_df)

glimpse(bookings_df)

colnames(bookings_df)

skim_without_charts(bookings_df)



## Begin cleaning the data. Only interested in the following variables; 'hotel', 'is_canceled', 'lead_time'.  Create a new data from with this information called `trimmed_df`

trimmed_df <- bookings_df %>% select(hotel, is_canceled, lead_time)



## View and examine new data fram

View(trimmed_df)



## Noticed column name 'hotel' is not very intuative and should be names 'hotel_type'. Change the column name to 'hotel_type'

trimmed_df %>% 
  select(hotel, is_canceled, lead_time) %>% 
  rename(hotel_type = hotel)



## Clean up data to be more streamline by combining arrival month and year into one column

example_df <- bookings_df %>%
  select(arrival_date_year, arrival_date_month) %>% 
  unite(arrival_month_year, c("arrival_date_month", "arrival_date_year"), sep = " ")



## Clean up data to be more streamline by combining adults, children and babies on a reservation to total number of people.

example_df <- bookings_df %>%
  mutate(guests = adults + children + babies)



## Calculate the total number of canceled bookings and the average lead time for booking. Make a column named 'number_canceled' and 'average_lead_time'

example_df <- bookings_df %>%
  summarize(number_canceled = sum(is_canceled), average_lead_time = mean(lead_time)

head(example_df)

# A tibble: 1 Ã— 2
  number_canceled average_lead_time
            <dbl>             <dbl>
1           44224              104.



## Stakeholder is developing promotions based on different booking distributions, they would like to know first how many transactions are occuring for each distribution.

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=distribution_channel))

## Does deposit or market segment affect the number of bookings for each distribution type

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=distribution_channel,fill=deposit_type))

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=distribution_channel,fill=market_segment))

## Stakeholders now ask for separet charts for each deposity type and market segement.

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=distribution_channel))+
  facet_wrap(~deposit_type)+
  theme(axis.text.x = element_text(angle = 45))

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=distribution_channel))+
  facet_wrap(~market_segment)+
  theme(axis.text.x = element_text(angle = 45))



## Stakeholder would like a visualization that compares market segments between city hotels and resort hotels.  Create a cleaned and labeled version as a .png file for them to include in a presentation.

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=market_segment)+
  facet_wrap(~hotels)
  labs(title="Market Segments: City Hotels v. Resort Hotels")

## adding labels for date range and changing angle of bar names for easier reading and save the image as a .png file.

mindate <- min(hotel_bookings$arrival_date_year)
maxdate <- max(hotel_bookings$arrival_date_year)

ggplot(data = hotel_bookings)+
  geom_bar(mapping = aes(x=market_segment)+
  facet_wrap(~hotels)+
  theme(axis.text.x = element_text(angle = 45))+
  labs(title="Market Segments: City Hotels v. Resort Hotels", caption=paste0("Date From: ", mindate, " to", maxdate), x="Market Segments", y="Number of Bookings")

ggsave('hotel_bookings_chart.png', width=7, height=7)
